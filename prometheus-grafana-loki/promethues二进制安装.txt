1.Prometheus生态系统:

Prometheus Server: Prometheus服务端，由于存储及收集数据，提供相关api对外查询用。
Exporter: 类似传统意义上的被监控端的agent，有区别的是，它不会主动推送监控数据到server端，而是等待server端定时来手机数据，即所谓的主动监控。
Pushagateway: 用于网络不可直达而居于exporter与server端的中转站。
Alertmanager: 报警组件，将报警的功能单独剥离出来放在alertmanager。
Web UI: Prometheus的web接口，可用于简单可视化，及语句执行或者服务状态监控。
参考文档：https://prometheus.io/docs/introduction/overview/

2.下载Prometheus:

下载并解压Prometheus安装包Download the latest release :https://prometheus.io/download/

tar xvfz prometheus-*.tar.gz
mv prometheus-2.11.0.linux-amd64 /usr/local/prometheus
cd prometheus-*
Prometheus服务器是一个称为prometheus的二进制文件。我们可以运行二进制文件，并通过传递--help标志来查看有关其选项的帮助
$ ./prometheus --help

3.配置Prometheus:

global:
  scrape_interval:     15s
  evaluation_interval: 15s
rule_files:
  # - "first.rules"
  # - "second.rules"
scrape_configs:
  - job_name: prometheus
    static_configs:
      - targets: ['localhost:9090']

4.检测填写是否正确:

./promtool check config prometheus.yml

5.后台运行:

vim /usr/lib/systemd/system/prometheus.service
[Unit]
Description=https://prometheus.io

[Service]
ExecStart=/usr/local/prometheus/prometheus --config.file="/usr/local/prometheus/prometheus.yml"

[Install]
WantedBy=multi-user.target

6.启动Prometheus:

systemctl daemon-reload  #系统重载  非必要不用
systemctl stop prometheus
systemctl enable prometheus
systemctl start prometheus
systemctl restart prometheus
systemctl status prometheus

要使用新创建的配置文件启动Prometheus，转到包含Prometheus二进制文件的目录并运行: ./prometheus --config.file=prometheus.yml
Prometheus开始运行。我们可以在 http://localhost:9090看到状态页。
通过导航到: http://localhost:9090/metrics.验证Prometheus是否正在提供自身指标

7.使用Graph界面:

输入以下表达式以图形化显示在自抓取的Prometheus中发生的每秒HTTP请求速率返回状态代码200:
rate(promhttp_metric_handler_requests_total{code="200"}[1m])




